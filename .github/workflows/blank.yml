# instalare el workload identity segun esto https://github.com/google-github-actions/auth#setup

# This is a basic workflow to help you get started with Actions

name: CI_cd_dataflow

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "master" ]
  #pull_request:
  #  branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  # This workflow contains a single job called "build"
  build_docker_image_and_template:
    #if: ${{ false }} ## temporaly disable for debugg the next job
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    permissions:
      contents: 'read'
      id-token: 'write'

    defaults:
      run:
        shell: bash
        #Inform a working directory if .tf files are not in root folder
        working-directory: ./terraform/build_docker_and_template
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3  
    
      - name: 'gcp auth with workload'
        id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: 'projects/760721552379/locations/global/workloadIdentityPools/my-pool/providers/my-provider'
          service_account: 'service-account-ci-cd-github@rosy-zoo-390619.iam.gserviceaccount.com'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
        with:
          version: '>= 442.0.0' #'442.0.0'

      - name: 'Use gcloud CLI'
        run:  |
          lsb_release -a
          ls
          pwd
          'gcloud info'

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: 'move pipeline folder to actual workdir'
        run: |
          cp -r /home/runner/work/globant_tests_dataflow/globant_tests_dataflow/itd-saptm-apachebeam_v2 .
          ls

      - name: Preparation step
        run: |
          rm -rf .terraform
          terraform version
          terraform providers
      - name: terraform_init
        run: terraform init -backend-config=terraform/backend.tfvars -upgrade=true -no-color

      - name: Validate
        run: |
          terraform fmt
          terraform validate
      - name: Plan Creation
        run: |
          terraform plan -input=false -out=tfplan -var="template_metadata_path=itd-saptm-apachebeam_v2/metadata/itd-kf-kf-filtering.json"
          terraform show
      - name: Apply tfplan
        env:
          TF_LOG: DEBUG
        run: |
          terraform apply -auto-approve -refresh=true -var="template_metadata_path=itd-saptm-apachebeam_v2/metadata/itd-kf-kf-filtering.json"

      
      #- name: 'build docker image'
      #  run: 'docker build -t local_image:latest -f itd-saptm-apachebeam_v2/Dockerfile itd-saptm-apachebeam_v2'
      
      - name: 'push image to gcr'
        run: |
           docker tag local_image:latest gcr.io/rosy-zoo-390619/gitlab_test/image_from_github:latest
           gcloud docker -- push gcr.io/rosy-zoo-390619/gitlab_test/image_from_github:latest

      - name: 'make flex template'
        run: |
          PROJECT="rosy-zoo-390619"
          BUCKET="dataflow_bucket_camilo_diaz"
          TEMPLATE_IMAGE="gcr.io/$PROJECT/gitlab_test/image_from_github:latest"
          TEMPLATE_PATH="gs://$BUCKET/gitlab_test/itd-saptm-apachebeam/streaming.json"
          gcloud dataflow flex-template build $TEMPLATE_PATH --image "$TEMPLATE_IMAGE" --sdk-language "PYTHON" --metadata-file "itd-saptm-apachebeam_v2/metadata/itd-kf-kf-filtering.json"

#- name: 'test deploy with sh commands'
      #  run: source itd-saptm-apachebeam_v2/deploy_github_actions.sh
          
      #- name: 'docker push'
      #  run: |
      #    docker tag local_image:latest gcr.io/rosy-zoo-390619/gitlab_test/image_from_github:latest
      #    docker push gcr.io/rosy-zoo-390619/gitlab_test/image_from_github:latest


  deploy_dataflow_job:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    #if: ${{ false }}
    if: ${{ always() && contains(join(needs.*.result, ','), 'success') }} 
    needs: build_docker_image_and_template
    
    permissions:
      contents: 'read'
      id-token: 'write'

    defaults:
      run:
        shell: bash
        #Inform a working directory if .tf files are not in root folder
        working-directory: ./terraform 
        
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3  
    
      - name: 'gcp auth with workload'
        id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: 'projects/760721552379/locations/global/workloadIdentityPools/my-pool/providers/my-provider'
          service_account: 'service-account-ci-cd-github@rosy-zoo-390619.iam.gserviceaccount.com'

      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
        with:
          version: '>= 363.0.0'

      - name: 'Use gcloud CLI'
        run: 'gcloud version'

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Preparation step
        run: |
          rm -rf .terraform
          terraform version
          terraform providers
      - name: terraform_init
        run: terraform init -backend-config=terraform/backend.tfvars -upgrade=true -no-color
      - name: print things
        run: |
          terraform version
          terraform providers
      - name: Validate
        run: |
          terraform fmt
          terraform validate
      - name: Plan Creation
        run: |
          terraform plan -input=false -out=tfplan
          terraform show
      - name: Apply tfplan
        env:
          TF_LOG: DEBUG
        run: |
          terraform apply -auto-approve -refresh=true #-chdir=terraform

#      - name: 'run dataflow template'
#        run: |
#          REGION="us-west4"
#          BUCKET="dataflow_bucket_camilo_diaz"
#          TEMPLATE_PATH="gs://$BUCKET/gitlab_test/itd-saptm-apachebeam/streaming.json"
#          xxxgcloud dataflow flex-template run "itd-kf-kf-filtering" --template-file-gcs-location "$TEMPLATE_PATH" --max-workers 2 --region "$REGION" --parameters bootstrap_servers="35.193.114.205:9092" --parameters group_id="test-consumer-group" --parameters output_topic="test-kafka-output-dataflow" --parameters start_read_time=0 --parameters commit_offset_in_finalize=1 --parameters topics="test-kafka-resume-job-3-partitions_tp2" --parameters columns_to_compare="item_no|mfg_div_cd"
